apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'  // Google Services plugin
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: "org.jlleitschuh.gradle.ktlint"

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'

    defaultConfig {
        applicationId "com.devhack.appdemofortests"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        //testInstrumentationRunner 'com.devhack.appdemofortests.runner.CucumberTestRunner'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "tags", "\"${getTestTags()}\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    sourceSets.each {
        it.java.srcDirs += "src/$it.name/kotlin"
    }

    testOptions {
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
        }
        unitTests.all {
            testLogging.events = ["passed", "skipped", "failed"]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        exclude "META-INF/LICENSE*"
    }
}

def getInstrumentation() {
    project.hasProperty('cucumber') ? 'com.devhack.appdemofortests.runner.CucumberTestRunner' : 'android.support.test.runner.AndroidJUnitRunner'
}

def getTestTags() {
    return project.hasProperty("tags") ? project.getProperties().get("tags") : ""
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.3.0'

    // Framework
    implementation 'co.devhack.framework:base:0.9.2'
    implementation 'co.devhack.framework:presentation:0.9.5.1'
    implementation 'co.devhack.framework:androidextensions:0.9.3.1'

    // Firebase
    implementation 'com.google.firebase:firebase-firestore-ktx:22.1.1'

    // ktx
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    // Koin
    implementation 'org.koin:koin-android:2.2.1'
    implementation 'org.koin:koin-androidx-viewmodel:2.2.1'

    // externals
    implementation "com.airbnb.android:lottie:3.4.0"

    // testing
    implementation 'io.github.serpro69:kotlin-faker:1.5.0'
    testImplementation 'org.amshove.kluent:kluent-android:1.61'
    testImplementation 'org.spekframework.spek2:spek-dsl-jvm:2.0.15'
    testImplementation 'org.spekframework.spek2:spek-runner-junit5:2.0.15'
    testImplementation "io.mockk:mockk:1.11.0"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.3'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'info.cukes:cucumber-android:1.2.5'
    androidTestImplementation 'info.cukes:cucumber-picocontainer:1.2.5'
}
